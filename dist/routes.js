"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const express_1 = require("express");
const multer_1 = __importDefault(require("multer"));
const CreateUserController_1 = require("./controllers/users/CreateUserController");
const AuthUserController_1 = require("./controllers/users/AuthUserController");
const DetailUserController_1 = require("./controllers/users/DetailUserController");
const ValidAuthenticated_1 = require("./middleware/ValidAuthenticated");
const CreateCategoryController_1 = require("./controllers/category/CreateCategoryController");
const ListCategoryController_1 = require("./controllers/category/ListCategoryController");
const CreateProductsController_1 = require("./controllers/products/CreateProductsController");
const ListProductCategoryController_1 = require("./controllers/products/ListProductCategoryController");
const PutProductController_1 = require("./controllers/products/PutProductController");
const GetProductsController_1 = require("./controllers/products/GetProductsController");
const CommissionController_1 = require("./controllers/commission/CommissionController");
const CreateOrdersController_1 = require("./controllers/orders/CreateOrdersController");
const RemoveOrdersController_1 = require("./controllers/orders/RemoveOrdersController");
const AddItemOrdersController_1 = require("./controllers/orders/AddItemOrdersController");
const RemoveItemController_1 = require("./controllers/orders/RemoveItemController");
const PutOrdersController_1 = require("./controllers/orders/PutOrdersController");
const ListOrderController_1 = require("./controllers/orders/ListOrderController");
const DetailOrderController_1 = require("./controllers/orders/DetailOrderController");
const FinishOrderController_1 = require("./controllers/orders/FinishOrderController");
const PutOrderItemController_1 = require("./controllers/orders/PutOrderItemController");
const MenuController_1 = require("./controllers/menu/MenuController");
const ListMenuController_1 = require("./controllers/menu/ListMenuController");
const UploadMenuContreoller_1 = require("./controllers/menu/UploadMenuContreoller");
const multer_2 = __importDefault(require("./imgConfig/multer"));
const router = (0, express_1.Router)();
exports.router = router;
const foto = (0, multer_1.default)(multer_2.default.upload("imgBanner"));
const menu = (0, multer_1.default)(multer_2.default.upload("imgMenu"));
router.post('/users', new CreateUserController_1.CreatUserController().handle);
router.post('/session', new AuthUserController_1.AuthUserController().handle);
router.get('/detail', ValidAuthenticated_1.ValidAuth, new DetailUserController_1.DetailUserController().handle);
router.post('/category', ValidAuthenticated_1.ValidAuth, new CreateCategoryController_1.CreateCategoryController().handle);
router.get('/categorys/list', ValidAuthenticated_1.ValidAuth, new ListCategoryController_1.ListCategoryController().handle);
router.post('/product', ValidAuthenticated_1.ValidAuth, foto.single('file'), new CreateProductsController_1.CreateProductsController().handle);
router.get('/category/products', ValidAuthenticated_1.ValidAuth, new ListProductCategoryController_1.ListProductCategoryController().handle);
router.get('/product/search/update:id', ValidAuthenticated_1.ValidAuth, new GetProductsController_1.GetProductsController().handle);
router.put('/product/update', foto.single('file'), new PutProductController_1.PutProductController().handle);
router.post('/order', ValidAuthenticated_1.ValidAuth, new CreateOrdersController_1.CreateOrdersController().handle);
router.delete('/order/remover/table', ValidAuthenticated_1.ValidAuth, new RemoveOrdersController_1.RemoveOrdersController().handle);
router.post('/order/add', ValidAuthenticated_1.ValidAuth, new AddItemOrdersController_1.AddItemController().handle);
router.delete('/order/remover/item', ValidAuthenticated_1.ValidAuth, new RemoveItemController_1.RemoveItemController().handle);
router.put('/order/make', ValidAuthenticated_1.ValidAuth, new PutOrdersController_1.PutOrdersController().handle);
router.get('/order/listAll', ValidAuthenticated_1.ValidAuth, new ListOrderController_1.ListOrderController().handle);
router.get('/order/detail', ValidAuthenticated_1.ValidAuth, new DetailOrderController_1.DetailOrderController().handler);
router.put('/order/finish', ValidAuthenticated_1.ValidAuth, new FinishOrderController_1.FinishOrderController().handler);
router.put('/order/item', ValidAuthenticated_1.ValidAuth, new PutOrderItemController_1.PutOrderItemController().handle);
router.get('/menu', new MenuController_1.MenuController().handle);
router.get('/menu/product', new ListMenuController_1.ListMenuController().handle);
router.post('/menu/upload', ValidAuthenticated_1.ValidAuth, menu.single('file'), new UploadMenuContreoller_1.UploadMenuController().handle);
router.post('/comissao', ValidAuthenticated_1.ValidAuth, new CommissionController_1.CreateCommissionController().handle);
